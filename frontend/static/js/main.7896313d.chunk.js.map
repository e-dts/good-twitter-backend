{"version":3,"sources":["components/login-signin-screen/login-signin.js","components/image-gallery/image-gallery.js","remote.js","components/tweet/quoted-tweet/quoted-tweet.js","components/tweet/tweet.js","index.js"],"names":["LoginSignInScreen","props","state","signUpInitiated","doneLoading","fetchingAuthStatus","ee","on","console","log","setState","this","rightClass","leftClass","id","className","class","alt","src","href","React","Component","ImageGallery","imageUrls","media","currentImageUrlIndex","imageClickIndex","setImagePadding","image","document","getElementById","height","naturalHeight","style","visibility","paddingTop","number","undefined","setTimeout","onClick","closeGallery","previousImage","bind","nextImage","socket","io","connect","requestInteractionCount","tweets","a","async","ids","forEach","tweet","push","key","idString","JSON","stringify","fetch","method","headers","body","response","json","data","interactWithTweet","interactType","favorite","retweet","toString","undoTweetInteraction","unfavorite","undoRetweet","QuotedTweet","target","rel","user","screen_name","id_str","name","full_text","text","Tweet","timeDateStamp","getTimeString","retweetCount","favoriteCount","retweeted","favorited","setInterval","tweetId","updatedCount","retweets","favs","twitterTime","hhmmss","split","month","monthStr","getMonthN","day","Number","hour","minute","second","year","zone","twitTime","curTime","diff","Math","round","min","h","charAt","Date","getFullYear","time","formattedTTime","formatTwitterTime","result","getRecentTimeStr","DateTime","fromObject","toSeconds","local","toUTC","getDate","numString","shortenedURL","urlObj","urlEntities","urls","urlEntity","url","display","display_url","full","expanded_url","separatedBySpaces","filteredArray","string","includes","getExpandedURL","handle","slice","hashtag","index","openGallery","vidUrl","type","video_info","variants","variant","bitrate","onLoadStart","setVolume","controls","loop","borderRadius","marginBottom","border","maxHeight","width","backgroundColor","outline","length","media_url","handleImageClick","resp","statusCode","favoriteClassName","retweetClassName","retweeterHandle","retweeterName","avatarUrl","getTweetHref","filterText","getMediaDiv","quotedTweet","handleRetweetClick","getInteractionCountString","handleFavoriteClick","EventEmitter","App","getVolume","videoVolume","galleryIsVisible","tweetSelectedID","tweetSelectedIndex","tweetSelectedMedia","loggedIn","queuedForUpdates","componentWillMount","passport","_json","getInitialTweetsFromServer","emit","updateInteractions","vol","mediaArray","querySelector","overflow","mediaUrls","map","mediaItem","tweetIDStr","updated","updatedObj","extended_entities","extended_tweet","decodeHtml","profile_image_url","retweet_count","favorite_count","created_at","renderGallery","entities","quoted_status","retweeted_status","tweetArray","newTweet","jsx","getRegTweetJSX","getRetweetJSX","html","search","replace","txt","createElement","innerHTML","value","IndexesOfTweetsLoaded","Tweets","getNewTweet","setTimer","tweetJSX","getRegTweetFromStreamJSX","getRetweetFromStreamJSX","addTweet","addTweetFromStream","getInitialTweets","TweetList","transitionName","transitionEnterTimeout","transitionLeaveTimeout","NavBar","logout","ReactDOM","render"],"mappings":"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","file":"static/js/main.7896313d.chunk.js","sourcesContent":["import React from 'react';\nimport { signUpEmail, logIn } from '../../auth';\nimport { ee } from '../../index';\n\n//  \"See what’s good in the world right now\n//\n// Join Good Twitter today.\"\n\nclass LoginSignInScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signUpInitiated: false,\n      doneLoading: false,\n      fetchingAuthStatus: true\n    };\n  }\n\n  componentWillMount() {\n    ee.on('loading-finish', () => {\n      console.log('logged in');\n      this.setState({\n        doneLoading: true,\n        fetchingAuthStatus: false\n      });\n    });\n\n    ee.on('logout', () => {\n      console.log('logged out');\n      this.setState({\n        doneLoading: false,\n        signUpInitiated: false,\n        fetchingAuthStatus: false\n      });\n    });\n\n    ee.on('not-authenticated', () => {\n      this.setState({\n        fetchingAuthStatus: false\n      });\n    });\n  }\n\n  toggleSignUpInit() {\n    const { signUpInitiated } = this.state;\n\n    if (signUpInitiated) {\n      this.setState({\n        signUpInitiated: false\n      });\n    } else {\n      this.setState({\n        signUpInitiated: true\n      });\n    }\n  }\n\n  render() {\n    let rightClass = 'login-right-part';\n    if (this.state.doneLoading) {\n      rightClass += ' moved-right';\n    }\n\n    let leftClass = '';\n    if (this.state.doneLoading) {\n      leftClass += ' moved-left';\n    }\n    return (\n      <div id=\"login-overlay\">\n        <div id=\"login-left-part\" className={leftClass}></div>\n\n        <div id=\"login-right-part\" className={rightClass}>\n          {(this.state.signUpInitiated === true ||\n            this.state.fetchingAuthStatus === true) &&\n            this.state.doneLoading === false && (\n              <div class=\"loadingio-spinner-spinner-63r99gwozs2\">\n                <div class=\"ldio-jh6epaq1s2b\">\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                  <div></div>\n                </div>\n              </div>\n            )}\n          <div id=\"splash-wrapper\">\n            {this.state.signUpInitiated === false &&\n              this.state.fetchingAuthStatus === false &&\n              this.state.doneLoading !== true && (\n                <div>\n                  <div id=\"signup-intro\">\n                    <img\n                      id=\"signup-twitter-icon\"\n                      alt=\"twitter-icon\"\n                      src=\"./img/twittericon.png\"\n                    />\n                    <h1 id=\"signup-header\">\n                      See what's good in the world right now\n                    </h1>\n                    <h2 id=\"signup-join\">Join Good Twitter today.</h2>\n                    <a href=\"http://localhost:5000/auth/twitter\">\n                      <button id=\"signup-button\">Sign in with Twitter</button>\n                    </a>\n                  </div>\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass LogInForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    console.log(event.target.id);\n    if (event.target.id === 'login-email-input') {\n      this.setState({\n        email: event.target.value\n      });\n    } else if (event.target.id === 'login-password-input') {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    logIn(this.state.email, this.state.password);\n  }\n\n  render() {\n    return (\n      <form id=\"login-form\" onSubmit={this.handleSubmit}>\n        <input\n          id=\"login-email-input\"\n          type=\"email\"\n          placeholder=\"E-mail\"\n          name=\"email\"\n          value={this.value}\n          onChange={this.handleChange}\n          required\n        ></input>\n        <input\n          id=\"login-password-input\"\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={this.value}\n          onChange={this.handleChange}\n          required\n        ></input>\n        <button\n          id=\"login-button\"\n          type=\"submit\"\n          onClick={() => {\n            this.setState({ doneLoading: true });\n          }}\n        >\n          Log in\n        </button>\n      </form>\n    );\n  }\n}\n\nclass SignUpForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: null,\n      password: null,\n      confirmPassword: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  componentDidMount() {\n    document.getElementById('signup-email').focus();\n  }\n\n  handleChange(event) {\n    console.log(event.target.id);\n    if (event.target.id === 'signup-email') {\n      this.setState({\n        email: event.target.value\n      });\n    } else if (event.target.id === 'signup-password') {\n      this.setState({\n        password: event.target.value\n      });\n    } else if (event.target.id === 'signup-cf-password') {\n      this.setState({\n        confirmPassword: event.target.value\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    signUpEmail(this.state.email, this.state.password);\n  }\n\n  render() {\n    return (\n      <div id=\"signup-wrapper\">\n        <h1 id=\"signup-menu-header\">Create your account</h1>\n        <div id=\"signup-menu\">\n          <form onSubmit={this.handleSubmit}>\n            <label id=\"signup-email-label\">E-mail</label>\n            <input\n              type=\"email\"\n              id=\"signup-email\"\n              name=\"email\"\n              onChange={this.handleChange}\n              value={this.state.value}\n            ></input>\n            <label id=\"signup-password-label\">Password</label>\n            <input\n              type=\"password\"\n              id=\"signup-password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.value}\n            ></input>\n            <label id=\"signup-cf-password-label\">Confirm password</label>\n            <input\n              id=\"signup-cf-password\"\n              type=\"password\"\n              name=\"confirm-password\"\n              onChange={this.handleChange}\n              value={this.state.value}\n            ></input>\n            <div id=\"back-button\" onClick={this.props.toggleMenu}>\n              Back\n            </div>\n            <button id=\"signup-submit\" type=\"submit\">\n              Join\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginSignInScreen;\n","import React from 'react';\n\nclass ImageGallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageUrls: this.props.media,\n      currentImageUrlIndex: this.props.imageClickIndex\n    };\n  }\n\n  componentDidMount() {\n    this.setImagePadding();\n  }\n\n  setImagePadding() {\n    const image = document.getElementById('gallery-image');\n    const height = image.naturalHeight;\n    if (height > 250) {\n      image.style.visibility = 'visible';\n      image.style.paddingTop = 0;\n      return;\n    }\n    image.style.paddingTop = `${(250 - height) / 2}px`;\n    image.style.visibility = 'visible';\n  }\n\n  nextImage() {\n    const { currentImageUrlIndex, imageUrls } = this.state;\n    let number;\n\n    if (imageUrls[currentImageUrlIndex + 1] === undefined) {\n      return;\n    } else {\n      number = currentImageUrlIndex + 1;\n    }\n\n    document.getElementById('gallery-image').style.visibility = 'hidden';\n\n    this.setState({\n      currentImageUrlIndex: number\n    });\n    setTimeout(this.setImagePadding, 50);\n  }\n\n  previousImage() {\n    const { currentImageUrlIndex, imageUrls } = this.state;\n    let number;\n\n    if (imageUrls[currentImageUrlIndex - 1] === undefined) {\n      return;\n    } else {\n      number = currentImageUrlIndex - 1;\n    }\n\n    this.setState({\n      currentImageUrlIndex: number\n    });\n    setTimeout(this.setImagePadding, 50);\n  }\n\n  render() {\n    return (\n      <div id=\"gallery-overlay\">\n        <span\n          className=\"icon-cross-sign\"\n          onClick={this.props.closeGallery}\n        ></span>\n        <div id=\"button-grid\">\n          <div id=\"gallery-wrapper\">\n            <div id=\"media-content\">\n              <img\n                id=\"gallery-image\"\n                alt=\"gallery-media\"\n                src={this.state.imageUrls[this.state.currentImageUrlIndex]}\n              ></img>\n            </div>\n            <div id=\"gallery-footer\">\n              <div id=\"gallery-action-bar\">\n                <div id=\"left-arrow-wrapper\">\n                  {this.state.imageUrls[this.state.currentImageUrlIndex - 1] !==\n                    undefined && (\n                    <span\n                      className=\"icon-left-arrow\"\n                      onClick={this.previousImage.bind(this)}\n                    ></span>\n                  )}\n                </div>\n                <span className=\"icon-retweet\"></span>\n                <div id=\"gallery-retweet-counter\">{'155K'}</div>\n                <span className=\"icon-favorite\"></span>\n                <div id=\"gallery-favorite-counter\">{'2K'}</div>\n                {this.state.imageUrls[this.state.currentImageUrlIndex + 1] !==\n                  undefined && (\n                  <span\n                    className=\"icon-right-arrow\"\n                    onClick={this.nextImage.bind(this)}\n                  ></span>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import io from 'socket.io-client';\n\nconst socket = io.connect('http://localhost:5000');\n\nasync function requestInteractionCount(tweets) {\n  let ids = [];\n  tweets.forEach(tweet => {\n    ids.push(tweet.key);\n  });\n\n  const idString = JSON.stringify(ids);\n\n  const response = await fetch('http://localhost:5000/api/interaction_count', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: idString\n  });\n  const data = await response.json();\n\n  console.log(data);\n  return data;\n}\n\nasync function interactWithTweet(id, interactType) {\n  id = id.toString();\n  async function favorite(id) {\n    const response = await fetch(\n      `http://localhost:5000/api/favorite/create/${id}`,\n      {\n        method: 'POST'\n      }\n    );\n    const data = await response.json();\n    return data;\n  }\n\n  async function retweet(id) {\n    const response = await fetch(\n      `http://localhost:5000/api/statuses/retweet/${id}`,\n      {\n        method: 'POST'\n      }\n    );\n\n    const data = await response.json();\n    return data;\n  }\n\n  if (interactType === 'fav') {\n    const response = await favorite(id);\n    return response;\n  } else {\n    const response = await retweet(id);\n    return response;\n  }\n}\n\nasync function undoTweetInteraction(id, interactType) {\n  id = id.toString();\n  async function unfavorite(id) {\n    const response = await fetch(\n      `http://localhost:5000/api/favorite/destroy/${id}`,\n      {\n        method: 'POST'\n      }\n    );\n    const data = await response.json();\n    return data;\n  }\n\n  async function undoRetweet(id) {\n    const response = await fetch(\n      `http://localhost:5000/api/statuses/unretweet/${id}`,\n      {\n        method: 'POST'\n      }\n    );\n\n    const data = await response.json();\n    return data;\n  }\n\n  if (interactType === 'fav') {\n    const response = await unfavorite(id);\n    return response;\n  } else {\n    const response = await undoRetweet(id);\n    return response;\n  }\n}\n\nexport {\n  requestInteractionCount,\n  socket,\n  interactWithTweet,\n  undoTweetInteraction\n};\n","import React from 'react';\nimport './quoted-tweet.css';\n\nclass QuotedTweet extends React.Component {\n  render() {\n    return (\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href={`https://twitter.com/${this.props.data.user.screen_name}/status/${this.props.data.id_str}`}\n      >\n        <div className=\"quoted-tweet\">\n          <div className=\"quoted-tweet-content\">\n            <h3 className=\"tweeter-name\">{this.props.data.user.name}</h3>\n            <p className=\"tweet-at\">@</p>\n            <p className=\"tweet-handle\">{this.props.data.user.screen_name}</p>\n            <p className=\"quoted-tweet-text\">\n              {this.props.data.full_text || this.props.data.text}\n            </p>\n          </div>\n        </div>\n      </a>\n    );\n  }\n}\n\nexport default QuotedTweet;\n","import React from 'react';\nimport ReactDOM from 'react';\nimport { DateTime } from 'luxon';\nimport { ee } from '../../index.js';\nimport { interactWithTweet, undoTweetInteraction } from '../../remote';\nimport QuotedTweet from './quoted-tweet/quoted-tweet.js';\n\nclass Tweet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeDateStamp: null\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      timeDateStamp: this.getTimeString(),\n      retweetCount: this.props.retweetCount,\n      favoriteCount: this.props.favoriteCount,\n      retweeted: this.props.retweeted,\n      favorited: this.props.favorited\n    });\n    setTimeout(() => {\n      setInterval(() => {\n        this.setState({\n          timeDateStamp: this.getTimeString()\n        });\n        console.log('updated timestamps');\n      }, 30000);\n    }, 30000);\n\n    ee.on(this.props.tweetId, updatedCount => {\n      console.log('event found');\n      this.setState({\n        retweetCount: updatedCount.retweets,\n        favoriteCount: updatedCount.favs\n      });\n    });\n  }\n\n  formatTwitterTime(twitterTime) {\n    function getMonthN(monthStr) {\n      switch (monthStr) {\n        case 'Jan':\n          return 1;\n        case 'Feb':\n          return 2;\n        case 'Mar':\n          return 3;\n        case 'Apr':\n          return 4;\n        case 'May':\n          return 5;\n        case 'Jun':\n          return 6;\n        case 'Jul':\n          return 7;\n        case 'Aug':\n          return 8;\n        case 'Sep':\n          return 9;\n        case 'Oct':\n          return 10;\n        case 'Nov':\n          return 11;\n        case 'Dec':\n          return 12;\n        default:\n          return 'NaM';\n      }\n    }\n\n    const hhmmss = twitterTime[3].split(':');\n    const formattedTTime = {\n      month: getMonthN(twitterTime[1]),\n      day: Number(twitterTime[2]),\n      hour: Number(hhmmss[0]),\n      minute: Number(hhmmss[1]),\n      second: Number(hhmmss[2]),\n      year: Number(twitterTime[5]),\n      zone: 'utc'\n    };\n    return formattedTTime;\n  }\n\n  getRecentTimeStr(twitTime, curTime) {\n    const diff = curTime - twitTime;\n\n    if (diff < 60) {\n      return Math.round(diff) + 's';\n    } else if (diff < 600) {\n      return (diff / 60).toString()[0] + 'm';\n    } else if (diff < 3600) {\n      const min = (diff / 60).toString();\n      return min[0] + min[1] + 'm';\n    } else if (diff < 36000) {\n      const h = (diff / 3600).toString();\n      return h[0] + 'h';\n    } else if (diff < 86400) {\n      const h = (diff / 3600).toString();\n      return h[0] + h[1] + 'h';\n    }\n  }\n\n  getDate(twitterTime) {\n    let timeString;\n    if (twitterTime[2].charAt(0) === '0') {\n      twitterTime[2] = twitterTime[2].charAt(1);\n    }\n    if (twitterTime[5] === new Date().getFullYear().toString()) {\n      timeString = twitterTime[1] + ' ' + twitterTime[2];\n    } else {\n      timeString = twitterTime[2] + ' ' + twitterTime[1] + ' ' + twitterTime[5];\n    }\n    return timeString;\n  }\n\n  getTimeString() {\n    const twitterTime = this.props.time.split(' ');\n\n    const formattedTTime = this.formatTwitterTime(twitterTime);\n\n    const result = this.getRecentTimeStr(\n      DateTime.fromObject(formattedTTime).toSeconds(),\n      DateTime.local()\n        .toUTC()\n        .toSeconds()\n    );\n\n    if (result === undefined) {\n      return this.getDate(twitterTime);\n    }\n\n    // console.log(result);\n    return result;\n  }\n\n  getInteractionCountString(number) {\n    const numString = number.toString();\n\n    if (number === 0) {\n      return '';\n    } else if (number > 999999) {\n      number = `${numString[0]}.${numString[1]}M`;\n    } else if (number > 99999) {\n      number = `${numString[0]}${numString[1]}${numString[2]}K`;\n    } else if (number > 9999) {\n      number = `${numString[0]}${numString[1]}K`;\n    } else if (number > 999) {\n      number = `${numString[0]}.${numString[1]}K`;\n    }\n    return number;\n  }\n\n  getExpandedURL(shortenedURL) {\n    const urlEntities = this.props.urls;\n    if (urlEntities === undefined) return;\n\n    let urlObj;\n\n    urlEntities.forEach(urlEntity => {\n      if (urlEntity.url === shortenedURL) {\n        urlObj = {\n          display: urlEntity.display_url,\n          full: urlEntity.expanded_url\n        };\n      }\n    });\n\n    return urlObj;\n  }\n\n  filterText(text) {\n    const separatedBySpaces = text.split(' ');\n    let filteredArray = [];\n    separatedBySpaces.forEach(string => {\n      if (!string.includes('https://t.co/')) {\n        if (string[0] === '@') {\n          const handle = string.slice(1);\n          filteredArray.push(\n            <a\n              class=\"blue highlight\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`https://twitter.com/${handle}`}\n            >\n              {string}\n            </a>\n          );\n          filteredArray.push(' ');\n        } else if (string[0] === '#') {\n          const hashtag = string.slice(1);\n          filteredArray.push(\n            <a\n              class=\"blue highlight\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`https://twitter.com/search?q=%23${hashtag}`}\n            >\n              {string}\n            </a>\n          );\n          filteredArray.push(' ');\n        } else if (string === '4Ap%8CIkf*k3$5nt$HsT7') {\n          filteredArray.push(<br></br>);\n        } else {\n          filteredArray.push(string);\n          filteredArray.push(' ');\n        }\n      } else {\n        const urlObj = this.getExpandedURL(string);\n\n        if (urlObj !== undefined) {\n          filteredArray.push(\n            <a\n              class=\"blue highlight\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={urlObj.full}\n            >\n              {urlObj.display}\n            </a>\n          );\n          filteredArray.push(' ');\n        }\n      }\n    });\n    return filteredArray;\n  }\n\n  handleImageClick(index) {\n    this.props.openGallery(this.props.media, index);\n  }\n\n  setVolume() {\n    // const node = ReactDOM.findDOMNode(this);\n    // console.log(node.childNodes[1].childNodes);\n    // node.childNodes[0].childNodes[0].childNodes.forEach(node => {\n    //   if (node.classList.contains('tweet-video-container')) {\n    //     node.childNodes[0].volume = this.props.getVolume();\n    //   }\n    // });\n  }\n\n  getMediaDiv() {\n    if (this.props.media === undefined) {\n      return;\n    }\n\n    if (this.props.media[0].type === 'video') {\n      let vidUrl;\n\n      const variants = this.props.media[0].video_info.variants;\n\n      variants.forEach(variant => {\n        if (variant.bitrate === 832000) {\n          vidUrl = variant.url;\n        }\n      });\n\n      return (\n        <div className=\"tweet-video-container\">\n          <video\n            onLoadStart={() => {\n              this.setVolume(this);\n            }}\n            controls\n            loop\n            style={{\n              borderRadius: '12px',\n              marginBottom: '5px',\n              border: 'solid 1px rgb(56, 68, 77)',\n              maxHeight: '506px',\n              width: '506px',\n              backgroundColor: 'black',\n              outline: 'none'\n            }}\n          >\n            <source src={vidUrl}></source>\n          </video>\n        </div>\n      );\n    }\n\n    if (this.props.media.length === 1) {\n      return (\n        <img\n          className=\"attached-image\"\n          src={this.props.media[0].media_url}\n          alt=\"media-one\"\n          onClick={() => this.handleImageClick(0)}\n        ></img>\n      );\n    } else if (this.props.media.length === 2) {\n      return (\n        <div className=\"tweet-image-container\">\n          <img\n            className=\"media-length-two-image-one\"\n            src={this.props.media[0].media_url}\n            onClick={() => this.handleImageClick(0)}\n            alt=\"media-one\"\n          ></img>\n          <div className=\"media-length-two-divider\"></div>\n          <img\n            className=\"media-length-two-image-two\"\n            src={this.props.media[1].media_url}\n            onClick={() => this.handleImageClick(1)}\n            alt=\"media-two\"\n          ></img>\n        </div>\n      );\n    } else if (this.props.media.length === 3) {\n      return (\n        <div className=\"media-length-three-container\">\n          <img\n            className=\"media-length-three-image-one\"\n            src={this.props.media[0].media_url}\n            onClick={() => this.handleImageClick(0)}\n            alt=\"media-one\"\n          />\n          <div className=\"media-length-three-vert-divider\"></div>\n          <div className=\"media-length-three-second-container\">\n            <img\n              className=\"media-length-three-image-two\"\n              src={this.props.media[1].media_url}\n              onClick={() => this.handleImageClick(1)}\n              alt=\"media-two\"\n            />\n            <div className=\"media-length-three-hor-divider\"></div>\n            <img\n              className=\"media-length-three-image-three\"\n              src={this.props.media[2].media_url}\n              onClick={() => this.handleImageClick(2)}\n              alt=\"media-three\"\n            />\n          </div>\n        </div>\n      );\n    } else if (this.props.media.length === 4) {\n      return (\n        <div className=\"media-length-four-container\">\n          <img\n            className=\"media-length-four-image-one\"\n            src={this.props.media[0].media_url}\n            onClick={() => this.handleImageClick(0)}\n            alt=\"media-one\"\n          />\n          <div className=\"media-length-three-vert-divider\"></div>\n          <div className=\"media-length-four-second-container\">\n            <img\n              className=\"media-length-four-image-two\"\n              src={this.props.media[1].media_url}\n              onClick={() => this.handleImageClick(1)}\n              alt=\"media-two\"\n            />\n            <div className=\"media-length-four-hor-divider\"></div>\n            <img\n              className=\"media-length-four-image-three\"\n              src={this.props.media[2].media_url}\n              onClick={() => this.handleImageClick(2)}\n              alt=\"media-three\"\n            />\n            <div className=\"media-length-four-hor-divider\"></div>\n            <img\n              className=\"media-length-four-image-four\"\n              src={this.props.media[3].media_url}\n              onClick={() => this.handleImageClick(3)}\n              alt=\"media-four\"\n            />\n          </div>\n        </div>\n      );\n    }\n  }\n\n  getTweetHref() {\n    const { tweetId, handle } = this.props;\n    return `https://twitter.com/${handle}/status/${tweetId}`;\n  }\n\n  async handleFavoriteClick() {\n    if (this.state.favorited === false) {\n      this.setState({ favorited: true });\n      console.log(this.props.tweetId);\n      const response = await interactWithTweet(this.props.tweetId, 'fav');\n      console.log(response);\n\n      if (response.resp.statusCode !== 200) {\n        this.setState({ favorited: false });\n      }\n    } else {\n      this.setState({ favorited: false });\n      console.log(this.props.tweetId);\n      const response = await undoTweetInteraction(this.props.tweetId, 'fav');\n      console.log(response);\n\n      if (response.resp.statusCode !== 200) {\n        this.setState({ favorited: true });\n      }\n    }\n  }\n\n  async handleRetweetClick() {\n    if (this.state.retweeted === false) {\n      this.setState({ retweeted: true });\n      console.log(this.props.tweetId);\n      const response = await interactWithTweet(this.props.tweetId, 'rt');\n      console.log(response);\n\n      if (response.resp.statusCode !== 200) {\n        this.setState({ retweeted: false });\n      }\n    } else {\n      this.setState({ retweeted: false });\n      console.log(this.props.tweetId);\n      const response = await undoTweetInteraction(this.props.tweetId, 'rt');\n      console.log(response);\n\n      if (response.resp.statusCode !== 200) {\n        this.setState({ favorited: false });\n      }\n    }\n  }\n\n  render() {\n    let favoriteClassName = 'icon-favorite';\n    if (this.state.favorited) {\n      favoriteClassName += ' red';\n    }\n\n    let retweetClassName = 'icon-retweet';\n    if (this.state.retweeted) {\n      retweetClassName += ' green';\n    }\n\n    return (\n      <div>\n        {this.props.retweeterHandle !== undefined && (\n          <div className=\"retweet-bar\">\n            <span class=\"icon-retweet poop\"></span>\n            <a\n              className=\"highlight\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href={`https://twitter.com/${this.props.retweeterHandle}`}\n            >\n              <div className=\"retweeter\">{this.props.retweeterName}</div>\n            </a>\n            <div className=\"retweeted-text\">retweeted</div>\n          </div>\n        )}\n\n        <div className=\"tweet-container\">\n          <a\n            className=\"avatar-profile-anchor highlight\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://twitter.com/${this.props.handle}`}\n          >\n            <img src={this.props.avatarUrl} alt=\"avatar\" className=\"avatar\" />\n          </a>\n          <div className=\"tweet-content\">\n            <div className=\"tweet-top-bar\">\n              <a\n                className=\"tweet-name highlight\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={`https://twitter.com/${this.props.handle}`}\n              >\n                {this.props.name}\n              </a>\n              <p className=\"tweet-at\">@</p>\n              <p className=\"tweet-handle\">{this.props.handle}</p>\n              <div className=\"tweet-date-dot\">.</div>\n              <a\n                className=\"tweet-date highlight\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href={this.getTweetHref()}\n              >\n                {this.state.timeDateStamp}\n              </a>\n            </div>\n            <p className=\"tweet-text\">{this.filterText(this.props.text)}</p>\n            {this.getMediaDiv()}\n            {this.props.quotedTweet !== undefined && (\n              <QuotedTweet data={this.props.quotedTweet} />\n            )}\n            <div className=\"tweet-action-bar\">\n              <span\n                className={retweetClassName}\n                onClick={this.handleRetweetClick.bind(this)}\n              ></span>\n              <div className=\"retweet-counter\">\n                {this.getInteractionCountString(this.state.retweetCount)}\n              </div>\n              <span\n                class={favoriteClassName}\n                onClick={this.handleFavoriteClick.bind(this)}\n              ></span>\n              <div className=\"favorite-counter\">\n                {this.getInteractionCountString(this.state.favoriteCount)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Tweet;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './components/image-gallery/image-gallery.css';\nimport './components/login-signin-screen/login-signin.css';\nimport Tweets from './noRTs';\nimport LoginSignInScreen from './components/login-signin-screen/login-signin.js';\nimport ImageGallery from './components/image-gallery/image-gallery.js';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\nimport { requestInteractionCount, socket } from './remote.js';\nimport EventEmitter from 'events';\nimport Tweet from './components/tweet/tweet.js';\n\nconst ee = new EventEmitter();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      galleryIsVisible: false,\n      tweetSelectedID: null,\n      tweetSelectedIndex: null,\n      tweetSelectedMedia: null,\n      videoVolume: 0.5,\n      loggedIn: null,\n      queuedForUpdates: []\n    };\n\n    this.componentWillMount = this.componentWillMount.bind(this);\n  }\n\n  async componentWillMount() {\n    try {\n      const response = await fetch('http://localhost:5000/auth/twitter/status');\n      const data = await response.json();\n      console.log(data);\n\n      if (data.passport !== undefined) {\n        console.log(data.passport);\n        this.setState({\n          loggedIn: data.passport.user._json.id\n        });\n        this.getInitialTweetsFromServer();\n      } else {\n        ee.emit('not-authenticated');\n      }\n    } catch (err) {\n      console.log(err);\n    }\n\n    setInterval(this.updateInteractions.bind(this), 10000);\n  }\n\n  setVolume(vol) {\n    this.setState({\n      videoVolume: vol\n    });\n  }\n\n  getVolume = () => this.state.videoVolume;\n\n  renderGallery(mediaArray, index) {\n    document.querySelector('body').style.overflow = 'hidden';\n    const mediaUrls = mediaArray.map(mediaItem => {\n      return mediaItem.media_url;\n    });\n\n    this.setState({\n      tweetSelectedIndex: index,\n      tweetSelectedMedia: mediaUrls,\n      galleryIsVisible: true\n    });\n  }\n\n  closeGallery() {\n    document.querySelector('body').style.overflow = 'auto';\n    this.setState({\n      galleryIsVisible: false\n    });\n  }\n\n  addToUpdateQueue(tweetIDStr) {\n    const { queuedForUpdates } = this.state;\n\n    this.setState({\n      queuedForUpdates: [...queuedForUpdates, tweetIDStr]\n    });\n  }\n\n  async updateInteractions() {\n    const { tweets, loggedIn } = this.state;\n    if (loggedIn === null || tweets === undefined) return;\n    const updated = await requestInteractionCount(tweets);\n    console.log(updated);\n    updated.forEach(updatedObj => {\n      ee.emit(updatedObj.id_str, updatedObj);\n    });\n  }\n\n  getRegTweetFromStreamJSX(tweet) {\n    let media;\n    if (tweet.extended_entities !== undefined) {\n      media = tweet.extended_entities.media;\n    } else {\n      media = tweet.media;\n    }\n\n    let text;\n\n    if (tweet.extended_tweet === undefined) {\n      text = tweet.text;\n    } else {\n      text = tweet.extended_tweet.full_text;\n    }\n\n    return (\n      <Tweet\n        key={tweet.id_str}\n        text={this.decodeHtml(text)}\n        media={media}\n        avatarUrl={tweet.user.profile_image_url}\n        name={tweet.user.name}\n        handle={tweet.user.screen_name}\n        tweetId={tweet.id_str}\n        retweetCount={tweet.retweet_count}\n        favoriteCount={tweet.favorite_count}\n        favorited={tweet.favorited}\n        retweeted={tweet.retweeted}\n        time={tweet.created_at}\n        openGallery={this.renderGallery.bind(this)}\n        setVolume={this.setVolume.bind(this)}\n        getVolume={this.getVolume.bind(this)}\n        urls={tweet.entities.urls}\n        quotedTweet={tweet.quoted_status}\n      />\n    );\n  }\n\n  getRetweetJSX(tweet) {\n    let media;\n    if (tweet.retweeted_status.extended_entities !== undefined) {\n      media = tweet.retweeted_status.extended_entities.media;\n    } else {\n      media = tweet.retweeted_status.media;\n    }\n\n    return (\n      <Tweet\n        key={tweet.retweeted_status.id_str}\n        text={this.decodeHtml(tweet.retweeted_status.full_text)}\n        media={media}\n        avatarUrl={tweet.retweeted_status.user.profile_image_url}\n        name={tweet.retweeted_status.user.name}\n        handle={tweet.retweeted_status.user.screen_name}\n        tweetId={tweet.retweeted_status.id_str}\n        retweetCount={tweet.retweeted_status.retweet_count}\n        favoriteCount={tweet.retweeted_status.favorite_count}\n        favorited={tweet.retweeted_status.favorited}\n        retweeted={tweet.retweeted_status.retweeted}\n        time={tweet.retweeted_status.created_at}\n        urls={tweet.retweeted_status.entities.urls}\n        openGallery={this.renderGallery.bind(this)}\n        setVolume={this.setVolume.bind(this)}\n        getVolume={this.getVolume.bind(this)}\n        retweeterName={tweet.user.name}\n        retweeterHandle={tweet.user.screen_name}\n        quotedTweet={tweet.retweeted_status.quoted_status}\n      />\n    );\n  }\n\n  getRegTweetJSX(tweet) {\n    let media;\n    if (tweet.extended_entities !== undefined) {\n      media = tweet.extended_entities.media;\n    } else {\n      media = tweet.media;\n    }\n\n    return (\n      <Tweet\n        key={tweet.id_str}\n        text={this.decodeHtml(tweet.full_text)}\n        media={media}\n        avatarUrl={tweet.user.profile_image_url}\n        name={tweet.user.name}\n        handle={tweet.user.screen_name}\n        tweetId={tweet.id_str}\n        retweetCount={tweet.retweet_count}\n        favoriteCount={tweet.favorite_count}\n        favorited={tweet.favorited}\n        retweeted={tweet.retweeted}\n        time={tweet.created_at}\n        openGallery={this.renderGallery.bind(this)}\n        setVolume={this.setVolume.bind(this)}\n        getVolume={this.getVolume.bind(this)}\n        urls={tweet.entities.urls}\n        quotedTweet={tweet.quoted_status}\n      />\n    );\n  }\n\n  async getInitialTweetsFromServer() {\n    let tweetArray = [];\n    const response = await fetch('http://localhost:5000/api/first_tweets');\n    const tweets = await response.json();\n    console.log(tweets);\n    tweets.forEach(newTweet => {\n      let jsx;\n      if (newTweet.retweeted_status === undefined) {\n        jsx = this.getRegTweetJSX(newTweet);\n      } else {\n        jsx = this.getRetweetJSX(newTweet);\n      }\n      tweetArray = [...tweetArray, jsx];\n    });\n    this.setState({\n      tweets: tweetArray\n    });\n    setTimeout(() => {\n      ee.emit('loading-finish');\n    }, 100);\n  }\n\n  decodeHtml(html) {\n    // replace js newlines with html break placeholders\n    while (html.search('\\n') !== -1) {\n      html = html.replace('\\n', ' 4Ap%8CIkf*k3$5nt$HsT7 ');\n    }\n\n    const txt = document.createElement('textarea');\n    txt.innerHTML = html;\n    return txt.value;\n  }\n\n  setTimer() {\n    let prevIndexes = undefined;\n    if (this.state.IndexesOfTweetsLoaded !== undefined) {\n      prevIndexes = [...this.state.IndexesOfTweetsLoaded];\n      if (prevIndexes.length === Tweets.length) {\n        return;\n      }\n    }\n\n    console.log(Tweets.length);\n    setTimeout(() => {\n      this.getNewTweet();\n      this.setTimer();\n    }, 7000);\n  }\n\n  getRetweetFromStreamJSX(tweet) {\n    let media;\n    if (tweet.retweeted_status.extended_entities !== undefined) {\n      media = tweet.retweeted_status.extended_entities.media;\n    } else {\n      media = tweet.retweeted_status.media;\n    }\n\n    let text;\n\n    if (tweet.retweeted_status.extended_tweet === undefined) {\n      text = tweet.retweeted_status.text;\n    } else {\n      text = tweet.retweeted_status.extended_tweet.full_text;\n    }\n\n    return (\n      <Tweet\n        key={tweet.retweeted_status.id_str}\n        text={this.decodeHtml(text)}\n        media={media}\n        avatarUrl={tweet.retweeted_status.user.profile_image_url}\n        name={tweet.retweeted_status.user.name}\n        handle={tweet.retweeted_status.user.screen_name}\n        tweetId={tweet.retweeted_status.id_str}\n        retweetCount={tweet.retweeted_status.retweet_count}\n        favoriteCount={tweet.retweeted_status.favorite_count}\n        favorited={tweet.retweeted_status.favorited}\n        retweeted={tweet.retweeted_status.retweeted}\n        time={tweet.retweeted_status.created_at}\n        urls={tweet.retweeted_status.entities.urls}\n        openGallery={this.renderGallery.bind(this)}\n        setVolume={this.setVolume.bind(this)}\n        getVolume={this.getVolume.bind(this)}\n        retweeterName={tweet.user.name}\n        retweeterHandle={tweet.user.screen_name}\n        quotedTweet={tweet.quoted_status}\n      />\n    );\n  }\n\n  addTweetFromStream(newTweet) {\n    const { tweets } = this.state;\n    let media;\n    if (newTweet.extended_entities !== undefined) {\n      media = newTweet.extended_entities.media;\n    } else {\n      media = newTweet.media;\n    }\n    let tweetJSX;\n\n    if (newTweet.retweeted_status === undefined) {\n      tweetJSX = this.getRegTweetFromStreamJSX(newTweet);\n    } else {\n      tweetJSX = this.getRetweetFromStreamJSX(newTweet);\n    }\n    this.setState({\n      tweets: [tweetJSX, ...tweets]\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <LoginSignInScreen loggedIn={this.state.loggedIn} />\n        <div>\n          {this.state.galleryIsVisible && (\n            <ImageGallery\n              closeGallery={this.closeGallery.bind(this)}\n              imageClickIndex={this.state.tweetSelectedIndex}\n              media={this.state.tweetSelectedMedia}\n            />\n          )}\n          <NavBar />\n          <TweetList\n            updateInteractions={this.updateInteractions.bind(this)}\n            addTweet={this.addTweetFromStream.bind(this)}\n            getInitialTweets={this.getInitialTweetsFromServer.bind(this)}\n            tweets={this.state.tweets}\n          />\n        </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass TweetList extends React.Component {\n  componentWillMount() {\n    socket.on('tweet', tweet => {\n      console.log(tweet);\n      this.props.addTweet(tweet);\n    });\n  }\n\n  render() {\n    return (\n      <div type=\"none\" id=\"tweet-stream\">\n        <ReactCSSTransitionGroup\n          transitionName=\"slideIn\"\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n        >\n          {this.props.tweets}\n        </ReactCSSTransitionGroup>\n      </div>\n    );\n  }\n}\n\nclass NavBar extends React.Component {\n  async logout() {\n    const response = await fetch('http://localhost:5000/auth/twitter/logout', {\n      method: 'DELETE'\n    });\n\n    console.log(response);\n\n    ee.emit('logout');\n  }\n\n  render() {\n    return (\n      <nav id=\"nav-bar\">\n        <div id=\"twitter-icon-wrapper\">\n          <img\n            id=\"navbar-twitter-icon\"\n            src=\"./img/twittericon.png\"\n            alt=\"twitter-icon\"\n          />\n        </div>\n        <button id=\"logout-button\" onClick={this.logout.bind(this)}>\n          Log out\n        </button>\n      </nav>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nexport { ee };\n"],"sourceRoot":""}